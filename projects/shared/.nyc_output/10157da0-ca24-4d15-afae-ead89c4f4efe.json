{"C:\\Users\\bicar\\Documents\\code\\github\\SpaceSim\\projects\\shared\\src\\utilities\\data-table.ts":{"path":"C:\\Users\\bicar\\Documents\\code\\github\\SpaceSim\\projects\\shared\\src\\utilities\\data-table.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":35}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":38}},"4":{"start":{"line":8,"column":8},"end":{"line":11,"column":10}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":46}},"6":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"7":{"start":{"line":14,"column":12},"end":{"line":14,"column":84}},"8":{"start":{"line":16,"column":8},"end":{"line":20,"column":9}},"9":{"start":{"line":17,"column":12},"end":{"line":19,"column":13}},"10":{"start":{"line":18,"column":16},"end":{"line":18,"column":33}},"11":{"start":{"line":30,"column":8},"end":{"line":36,"column":9}},"12":{"start":{"line":31,"column":24},"end":{"line":31,"column":43}},"13":{"start":{"line":32,"column":12},"end":{"line":35,"column":13}},"14":{"start":{"line":33,"column":16},"end":{"line":33,"column":48}},"15":{"start":{"line":34,"column":16},"end":{"line":34,"column":28}},"16":{"start":{"line":37,"column":8},"end":{"line":37,"column":21}},"17":{"start":{"line":51,"column":20},"end":{"line":51,"column":21}},"18":{"start":{"line":52,"column":8},"end":{"line":69,"column":9}},"19":{"start":{"line":54,"column":12},"end":{"line":59,"column":13}},"20":{"start":{"line":55,"column":16},"end":{"line":55,"column":53}},"21":{"start":{"line":58,"column":16},"end":{"line":58,"column":49}},"22":{"start":{"line":60,"column":12},"end":{"line":68,"column":13}},"23":{"start":{"line":61,"column":16},"end":{"line":67,"column":17}},"24":{"start":{"line":62,"column":20},"end":{"line":65,"column":23}},"25":{"start":{"line":66,"column":20},"end":{"line":66,"column":28}},"26":{"start":{"line":70,"column":8},"end":{"line":70,"column":21}},"27":{"start":{"line":81,"column":24},"end":{"line":81,"column":35}},"28":{"start":{"line":82,"column":8},"end":{"line":101,"column":9}},"29":{"start":{"line":83,"column":12},"end":{"line":96,"column":13}},"30":{"start":{"line":84,"column":16},"end":{"line":95,"column":17}},"31":{"start":{"line":85,"column":39},"end":{"line":85,"column":57}},"32":{"start":{"line":86,"column":33},"end":{"line":86,"column":68}},"33":{"start":{"line":87,"column":20},"end":{"line":94,"column":24}},"34":{"start":{"line":88,"column":24},"end":{"line":92,"column":25}},"35":{"start":{"line":89,"column":28},"end":{"line":91,"column":29}},"36":{"start":{"line":90,"column":32},"end":{"line":90,"column":45}},"37":{"start":{"line":93,"column":24},"end":{"line":93,"column":36}},"38":{"start":{"line":100,"column":12},"end":{"line":100,"column":61}},"39":{"start":{"line":102,"column":8},"end":{"line":102,"column":51}},"40":{"start":{"line":112,"column":24},"end":{"line":112,"column":44}},"41":{"start":{"line":113,"column":8},"end":{"line":113,"column":44}},"42":{"start":{"line":113,"column":33},"end":{"line":113,"column":42}},"43":{"start":{"line":124,"column":20},"end":{"line":124,"column":50}},"44":{"start":{"line":125,"column":23},"end":{"line":125,"column":46}},"45":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"46":{"start":{"line":127,"column":12},"end":{"line":127,"column":54}},"47":{"start":{"line":129,"column":8},"end":{"line":129,"column":25}},"48":{"start":{"line":139,"column":24},"end":{"line":139,"column":44}},"49":{"start":{"line":140,"column":8},"end":{"line":140,"column":30}},"50":{"start":{"line":151,"column":22},"end":{"line":151,"column":45}},"51":{"start":{"line":152,"column":8},"end":{"line":155,"column":9}},"52":{"start":{"line":153,"column":22},"end":{"line":153,"column":36}},"53":{"start":{"line":154,"column":12},"end":{"line":154,"column":39}},"54":{"start":{"line":156,"column":8},"end":{"line":156,"column":21}},"55":{"start":{"line":163,"column":24},"end":{"line":163,"column":59}},"56":{"start":{"line":164,"column":8},"end":{"line":164,"column":31}},"57":{"start":{"line":165,"column":8},"end":{"line":165,"column":23}},"58":{"start":{"line":176,"column":8},"end":{"line":188,"column":9}},"59":{"start":{"line":177,"column":12},"end":{"line":184,"column":13}},"60":{"start":{"line":178,"column":16},"end":{"line":183,"column":17}},"61":{"start":{"line":179,"column":20},"end":{"line":179,"column":52}},"62":{"start":{"line":182,"column":20},"end":{"line":182,"column":75}},"63":{"start":{"line":187,"column":12},"end":{"line":187,"column":41}},"64":{"start":{"line":189,"column":8},"end":{"line":189,"column":19}},"65":{"start":{"line":199,"column":22},"end":{"line":199,"column":24}},"66":{"start":{"line":200,"column":23},"end":{"line":200,"column":48}},"67":{"start":{"line":201,"column":8},"end":{"line":210,"column":9}},"68":{"start":{"line":202,"column":12},"end":{"line":206,"column":13}},"69":{"start":{"line":202,"column":25},"end":{"line":202,"column":26}},"70":{"start":{"line":203,"column":28},"end":{"line":203,"column":46}},"71":{"start":{"line":204,"column":26},"end":{"line":204,"column":35}},"72":{"start":{"line":205,"column":16},"end":{"line":205,"column":49}},"73":{"start":{"line":209,"column":12},"end":{"line":209,"column":52}},"74":{"start":{"line":211,"column":8},"end":{"line":211,"column":23}},"75":{"start":{"line":214,"column":0},"end":{"line":214,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":25},"end":{"line":21,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":16},"end":{"line":38,"column":5}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":32},"end":{"line":71,"column":5}},"line":50},"3":{"name":"(anonymous_3)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":23},"end":{"line":103,"column":5}},"line":80},"4":{"name":"(anonymous_4)","decl":{"start":{"line":87,"column":69},"end":{"line":87,"column":70}},"loc":{"start":{"line":87,"column":74},"end":{"line":94,"column":21}},"line":87},"5":{"name":"(anonymous_5)","decl":{"start":{"line":111,"column":4},"end":{"line":111,"column":5}},"loc":{"start":{"line":111,"column":25},"end":{"line":114,"column":5}},"line":111},"6":{"name":"(anonymous_6)","decl":{"start":{"line":113,"column":28},"end":{"line":113,"column":29}},"loc":{"start":{"line":113,"column":33},"end":{"line":113,"column":42}},"line":113},"7":{"name":"(anonymous_7)","decl":{"start":{"line":123,"column":4},"end":{"line":123,"column":5}},"loc":{"start":{"line":123,"column":27},"end":{"line":130,"column":5}},"line":123},"8":{"name":"(anonymous_8)","decl":{"start":{"line":138,"column":4},"end":{"line":138,"column":5}},"loc":{"start":{"line":138,"column":19},"end":{"line":141,"column":5}},"line":138},"9":{"name":"(anonymous_9)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":23},"end":{"line":157,"column":5}},"line":150},"10":{"name":"(anonymous_10)","decl":{"start":{"line":162,"column":4},"end":{"line":162,"column":5}},"loc":{"start":{"line":162,"column":12},"end":{"line":166,"column":5}},"line":162},"11":{"name":"(anonymous_11)","decl":{"start":{"line":174,"column":4},"end":{"line":174,"column":5}},"loc":{"start":{"line":174,"column":19},"end":{"line":190,"column":5}},"line":174},"12":{"name":"(anonymous_12)","decl":{"start":{"line":198,"column":4},"end":{"line":198,"column":5}},"loc":{"start":{"line":198,"column":18},"end":{"line":212,"column":5}},"line":198}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},{"start":{"line":13,"column":8},"end":{"line":15,"column":9}}],"line":13},"1":{"loc":{"start":{"line":16,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":20,"column":9}},{"start":{"line":16,"column":8},"end":{"line":20,"column":9}}],"line":16},"2":{"loc":{"start":{"line":30,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":36,"column":9}},{"start":{"line":30,"column":8},"end":{"line":36,"column":9}}],"line":30},"3":{"loc":{"start":{"line":32,"column":12},"end":{"line":35,"column":13}},"type":"if","locations":[{"start":{"line":32,"column":12},"end":{"line":35,"column":13}},{"start":{"line":32,"column":12},"end":{"line":35,"column":13}}],"line":32},"4":{"loc":{"start":{"line":52,"column":8},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":69,"column":9}},{"start":{"line":52,"column":8},"end":{"line":69,"column":9}}],"line":52},"5":{"loc":{"start":{"line":54,"column":12},"end":{"line":59,"column":13}},"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":59,"column":13}},{"start":{"line":54,"column":12},"end":{"line":59,"column":13}}],"line":54},"6":{"loc":{"start":{"line":60,"column":12},"end":{"line":68,"column":13}},"type":"if","locations":[{"start":{"line":60,"column":12},"end":{"line":68,"column":13}},{"start":{"line":60,"column":12},"end":{"line":68,"column":13}}],"line":60},"7":{"loc":{"start":{"line":82,"column":8},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":101,"column":9}},{"start":{"line":82,"column":8},"end":{"line":101,"column":9}}],"line":82},"8":{"loc":{"start":{"line":82,"column":12},"end":{"line":82,"column":41}},"type":"binary-expr","locations":[{"start":{"line":82,"column":12},"end":{"line":82,"column":27}},{"start":{"line":82,"column":31},"end":{"line":82,"column":41}}],"line":82},"9":{"loc":{"start":{"line":84,"column":16},"end":{"line":95,"column":17}},"type":"if","locations":[{"start":{"line":84,"column":16},"end":{"line":95,"column":17}},{"start":{"line":84,"column":16},"end":{"line":95,"column":17}}],"line":84},"10":{"loc":{"start":{"line":89,"column":28},"end":{"line":91,"column":29}},"type":"if","locations":[{"start":{"line":89,"column":28},"end":{"line":91,"column":29}},{"start":{"line":89,"column":28},"end":{"line":91,"column":29}}],"line":89},"11":{"loc":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},{"start":{"line":126,"column":8},"end":{"line":128,"column":9}}],"line":126},"12":{"loc":{"start":{"line":176,"column":8},"end":{"line":188,"column":9}},"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":188,"column":9}},{"start":{"line":176,"column":8},"end":{"line":188,"column":9}}],"line":176},"13":{"loc":{"start":{"line":178,"column":16},"end":{"line":183,"column":17}},"type":"if","locations":[{"start":{"line":178,"column":16},"end":{"line":183,"column":17}},{"start":{"line":178,"column":16},"end":{"line":183,"column":17}}],"line":178},"14":{"loc":{"start":{"line":201,"column":8},"end":{"line":210,"column":9}},"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":210,"column":9}},{"start":{"line":201,"column":8},"end":{"line":210,"column":9}}],"line":201}},"s":{"0":1,"1":1,"2":14,"3":14,"4":14,"5":14,"6":14,"7":11,"8":14,"9":6,"10":27,"11":53,"12":53,"13":53,"14":53,"15":53,"16":0,"17":83,"18":83,"19":83,"20":1,"21":82,"22":83,"23":83,"24":84,"25":84,"26":83,"27":43,"28":43,"29":32,"30":35,"31":35,"32":35,"33":35,"34":193,"35":205,"36":151,"37":42,"38":11,"39":43,"40":26,"41":26,"42":26,"43":256,"44":256,"45":256,"46":243,"47":13,"48":4,"49":4,"50":2,"51":2,"52":8,"53":8,"54":2,"55":1,"56":1,"57":1,"58":403,"59":377,"60":390,"61":377,"62":13,"63":26,"64":403,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1},"f":{"0":14,"1":53,"2":83,"3":43,"4":193,"5":26,"6":26,"7":256,"8":4,"9":2,"10":1,"11":403,"12":0},"b":{"0":[11,3],"1":[6,8],"2":[53,0],"3":[53,0],"4":[83,0],"5":[1,82],"6":[83,0],"7":[32,11],"8":[43,38],"9":[35,0],"10":[151,54],"11":[243,13],"12":[377,26],"13":[377,13],"14":[0,0]},"inputSourceMap":{"version":3,"file":"C:\\Users\\bicar\\Documents\\code\\github\\SpaceSim\\projects\\shared\\src\\utilities\\data-table.ts","sources":["C:\\Users\\bicar\\Documents\\code\\github\\SpaceSim\\projects\\shared\\src\\utilities\\data-table.ts"],"names":[],"mappings":"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","sourcesContent":["export type DataTableOptions<T extends {}> = {\n    /**\n     * an array of fields in `T` whose values will be used to generate\n     * a unique record index for each record added to the table\n     */\n    indexKeys?: Array<keyof T>;\n    /**\n     * an array of records to add on creation of the table; alternatively\n     * you can use the `add(record: T)` function after creation\n     */\n    records?: Array<T>;\n    /**\n     * a string to use to separate the index key values when generating\n     * a unique key to index the table\n     */\n    keyDelimiter?: string;\n};\n\nexport class DataTable<T extends {}> {\n    private readonly _tableMap = new Map<string, T>();\n    private readonly _indexKeys = new Array<keyof T>();\n    private readonly _keyDelim: string;\n    \n    constructor(options?: DataTableOptions<T>) {\n        options = {\n            keyDelimiter: '-',\n            ...options\n        };\n        this._keyDelim = options.keyDelimiter;\n        if (options.indexKeys) {\n            this._indexKeys.splice(this._indexKeys.length, 0, ...options.indexKeys);\n        }\n        if (options.records) {\n            for (let record of options.records) {\n                this.add(record);\n            }\n        }\n    }\n\n    /**\n     * adds a new unique object to the table if no objects already\n     * exist that use the same index key(s)\n     * @param record a new object to be added to the table\n     * @returns `true` if the object was added or `false` if an object\n     * already exists using the same index key(s)\n     */\n    add(record: T): boolean {\n        if (record) {\n            const key = this.getKey(record);\n            if (!this._tableMap.has(key)) {\n                this._tableMap.set(key, record);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * updates an existing object in the table with new values for\n     * all fields that have changed, preserving any unchanged fields\n     * and the fields used as index keys\n     * @param updates an existing object containing updated values\n     * @param queries optional objects containing one or more fields in type `T`\n     * used to filter the results. returned results must match all values specified.\n     * if not supplied then the `updates` object will be used to `get` a matching\n     * record from the table\n     * @returns the number of records updated\n     */\n    update(updates: Partial<T>, ...queries: Array<Partial<T>>): number {\n        let count = 0;\n        if (updates) {\n            let oldRecords: Array<T>;\n            if (queries?.length) {\n                oldRecords = this.select(...queries);\n            } else {\n                oldRecords = [this.get(updates)];\n            }\n            if (oldRecords?.length) {\n                for (const oldRecord of oldRecords) {\n                    this._tableMap.set(this.getKey(oldRecord), {\n                        ...oldRecord,\n                        ...updates\n                    });\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n\n    /**\n     * finds all objects containing matching values for the supplied\n     * fields in `partial`\n     * @param queries optional objects containing one or more fields in type `T`\n     * used to filter the results. returned results must match all values specified\n     * @returns an array of objects containing matching values for all\n     * fields supplied in `partial` or all objects if `partial` is not supplied\n     */\n    select(...queries: Array<Partial<T>>): Array<T> {\n        const results = new Array<T>();\n        if (queries?.length && queries[0]) {\n            for (const query of queries) {\n                if (query) {\n                    const findByKeys = Object.keys(query);\n                    const uArr = Array.from(this._tableMap.values());\n                    results.splice(results.length, 0, ...uArr.filter(u => {\n                        for (let key of findByKeys) {\n                            if (query[key] !== u[key]) {\n                                return false;\n                            }\n                        }\n                        return true;\n                    }));\n                }\n            }\n        } else {\n            // return all records in the table\n            results.splice(0, 0, ...this._tableMap.values());\n        }\n        return JSON.parse(JSON.stringify(results));\n    }\n\n    /**\n     * finds the first object containing matching values for the supplied fields\n     * in `partial`\n     * @param partial an optional object containing one or more fields in type `T`\n     * @returns the first non-null (and non-undefined) object matching values\n     * for all fields supplied in `partial`\n     */\n    selectFirst(partial?: Partial<T>): T {\n        const results = this.select(partial);\n        return results.find(r => r != null);\n    }\n\n    /**\n     * gets the object contained in the table whose index keys match\n     * those supplied in `containsIndexKeys`\n     * @param containsIndexKeys an object containing all fields used\n     * as index keys\n     * @returns a single object matching the supplied index keys or\n     * `undefined` if none exist\n     */\n    get(containsIndexKeys: Partial<T>): T {\n        const key = this.getKey(containsIndexKeys);\n        const record = this._tableMap.get(key);\n        if (record) {\n            return JSON.parse(JSON.stringify(record));\n        }\n        return undefined;\n    }\n\n    /**\n     * returns the number of fields matching the specified selection\n     * criteria passed in `partial`\n     * @param partial an optional object containing one or more fields in type `T`\n     * @returns the number of records found that match the passed in `partial` or\n     * all if no `partial` is supplied\n     */\n    count(partial?: Partial<T>): number {\n        const records = this.select(partial);\n        return records.length;\n    }\n\n    /**\n     * removes records from the table whose field values match the \n     * values of the supplied `partial` object\n     * @param partial the object whose field values are used to lookup\n     * existing records for deletion\n     * @returns and array of records that were deleted or empty array\n     * if no matches found\n     */\n    delete(...partial: Array<Partial<T>>): Array<T> {\n        const found = this.select(...partial);\n        for (let f of found) {\n            let key = this.getKey(f);\n            this._tableMap.delete(key);\n        }\n        return found;\n    }\n\n    /**\n     * removes all records stored by this `DataTable`\n     * @returns all removed records\n     */\n    clear(): Array<T> {\n        const records = Array.from(this._tableMap.values());\n        this._tableMap.clear();\n        return records;\n    }\n\n    /**\n     * converts the passed in object to a key that is used to uniquely\n     * identify records in this table\n     * @param record the object that contains the index keys to be\n     * converted into a `string` key\n     * @returns the `string` key\n     */\n    getKey(record: Partial<T>): string {\n        let key: string;\n        if (this._indexKeys.length) {\n            for (let k of this._indexKeys) {\n                if (!key) {\n                    key = JSON.stringify(record[k]);\n                } else {\n                    key += `${this._keyDelim}${JSON.stringify(record[k])}`;\n                }\n            }\n        } else {\n            key = JSON.stringify(record);\n        }\n        return key;\n    }\n\n    /**\n     * parses the supplied `key` to create a partial object containing the fields\n     * and values from the `key`\n     * @param key a `string` key created by the `generateKey` function\n     * @returns a partial object containing fields and values parsed from\n     * the supplied `key`\n     */\n    parseKey(key: string): Partial<T> {\n        let partial: Partial<T> = {};\n        const values = key.split(this._keyDelim);\n        if (values.length >= this._indexKeys.length) {\n            for (var i=0; i<this._indexKeys.length; i++) {\n                let field = this._indexKeys[i];\n                let val = values[i];\n                partial[field] = JSON.parse(val);\n            }\n        } else {\n            throw new Error(`invalid key '${key}'`);\n        }\n        return partial;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e5e8455955af6e4a0d88283e0f0a6db3ff7d61b1","contentHash":"8415ce60c20dfd01d51d389a2d50c48fcb6bc471470788e90e5cec7d81e51976"},"C:\\Users\\bicar\\Documents\\code\\github\\SpaceSim\\projects\\shared\\src\\utilities\\game-score-tracker.ts":{"path":"C:\\Users\\bicar\\Documents\\code\\github\\SpaceSim\\projects\\shared\\src\\utilities\\game-score-tracker.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":38}},"4":{"start":{"line":9,"column":8},"end":{"line":11,"column":11}},"5":{"start":{"line":14,"column":8},"end":{"line":26,"column":9}},"6":{"start":{"line":15,"column":24},"end":{"line":15,"column":34}},"7":{"start":{"line":16,"column":12},"end":{"line":25,"column":15}},"8":{"start":{"line":29,"column":22},"end":{"line":29,"column":42}},"9":{"start":{"line":30,"column":8},"end":{"line":34,"column":9}},"10":{"start":{"line":31,"column":12},"end":{"line":31,"column":46}},"11":{"start":{"line":32,"column":12},"end":{"line":32,"column":71}},"12":{"start":{"line":33,"column":12},"end":{"line":33,"column":71}},"13":{"start":{"line":37,"column":22},"end":{"line":37,"column":55}},"14":{"start":{"line":38,"column":8},"end":{"line":46,"column":9}},"15":{"start":{"line":39,"column":12},"end":{"line":43,"column":15}},"16":{"start":{"line":44,"column":12},"end":{"line":44,"column":100}},"17":{"start":{"line":45,"column":12},"end":{"line":45,"column":86}},"18":{"start":{"line":49,"column":22},"end":{"line":49,"column":59}},"19":{"start":{"line":50,"column":8},"end":{"line":62,"column":9}},"20":{"start":{"line":51,"column":30},"end":{"line":51,"column":54}},"21":{"start":{"line":52,"column":26},"end":{"line":52,"column":82}},"22":{"start":{"line":52,"column":51},"end":{"line":52,"column":81}},"23":{"start":{"line":54,"column":12},"end":{"line":61,"column":13}},"24":{"start":{"line":55,"column":16},"end":{"line":55,"column":101}},"25":{"start":{"line":56,"column":16},"end":{"line":59,"column":19}},"26":{"start":{"line":60,"column":16},"end":{"line":60,"column":93}},"27":{"start":{"line":74,"column":20},"end":{"line":74,"column":21}},"28":{"start":{"line":75,"column":22},"end":{"line":75,"column":47}},"29":{"start":{"line":76,"column":8},"end":{"line":76,"column":62}},"30":{"start":{"line":77,"column":8},"end":{"line":77,"column":44}},"31":{"start":{"line":78,"column":8},"end":{"line":78,"column":49}},"32":{"start":{"line":81,"column":27},"end":{"line":81,"column":38}},"33":{"start":{"line":82,"column":8},"end":{"line":91,"column":9}},"34":{"start":{"line":83,"column":12},"end":{"line":90,"column":13}},"35":{"start":{"line":85,"column":34},"end":{"line":85,"column":67}},"36":{"start":{"line":86,"column":40},"end":{"line":87,"column":42}},"37":{"start":{"line":86,"column":59},"end":{"line":86,"column":82}},"38":{"start":{"line":87,"column":36},"end":{"line":87,"column":41}},"39":{"start":{"line":88,"column":37},"end":{"line":88,"column":58}},"40":{"start":{"line":89,"column":16},"end":{"line":89,"column":75}},"41":{"start":{"line":92,"column":26},"end":{"line":92,"column":70}},"42":{"start":{"line":92,"column":52},"end":{"line":92,"column":69}},"43":{"start":{"line":93,"column":26},"end":{"line":93,"column":45}},"44":{"start":{"line":94,"column":8},"end":{"line":94,"column":25}},"45":{"start":{"line":97,"column":22},"end":{"line":97,"column":45}},"46":{"start":{"line":98,"column":8},"end":{"line":101,"column":10}},"47":{"start":{"line":104,"column":8},"end":{"line":104,"column":29}},"48":{"start":{"line":107,"column":21},"end":{"line":107,"column":36}},"49":{"start":{"line":108,"column":24},"end":{"line":111,"column":9}},"50":{"start":{"line":112,"column":8},"end":{"line":117,"column":9}},"51":{"start":{"line":113,"column":12},"end":{"line":113,"column":33}},"52":{"start":{"line":116,"column":12},"end":{"line":116,"column":30}},"53":{"start":{"line":120,"column":8},"end":{"line":124,"column":9}},"54":{"start":{"line":121,"column":12},"end":{"line":123,"column":13}},"55":{"start":{"line":122,"column":16},"end":{"line":122,"column":39}},"56":{"start":{"line":127,"column":23},"end":{"line":127,"column":24}},"57":{"start":{"line":128,"column":22},"end":{"line":128,"column":81}},"58":{"start":{"line":129,"column":23},"end":{"line":129,"column":84}},"59":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"60":{"start":{"line":131,"column":12},"end":{"line":131,"column":46}},"61":{"start":{"line":133,"column":8},"end":{"line":133,"column":24}},"62":{"start":{"line":136,"column":0},"end":{"line":136,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":12,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":16},"end":{"line":27,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":22},"end":{"line":35,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":46},"end":{"line":47,"column":5}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":56},"end":{"line":63,"column":5}},"line":48},"5":{"name":"(anonymous_5)","decl":{"start":{"line":52,"column":46},"end":{"line":52,"column":47}},"loc":{"start":{"line":52,"column":51},"end":{"line":52,"column":81}},"line":52},"6":{"name":"(anonymous_6)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":21},"end":{"line":79,"column":5}},"line":73},"7":{"name":"(anonymous_7)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":21},"end":{"line":95,"column":5}},"line":80},"8":{"name":"(anonymous_8)","decl":{"start":{"line":86,"column":54},"end":{"line":86,"column":55}},"loc":{"start":{"line":86,"column":59},"end":{"line":86,"column":82}},"line":86},"9":{"name":"(anonymous_9)","decl":{"start":{"line":87,"column":26},"end":{"line":87,"column":27}},"loc":{"start":{"line":87,"column":36},"end":{"line":87,"column":41}},"line":87},"10":{"name":"(anonymous_10)","decl":{"start":{"line":92,"column":42},"end":{"line":92,"column":43}},"loc":{"start":{"line":92,"column":52},"end":{"line":92,"column":69}},"line":92},"11":{"name":"(anonymous_11)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":20},"end":{"line":102,"column":5}},"line":96},"12":{"name":"(anonymous_12)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":18},"end":{"line":105,"column":5}},"line":103},"13":{"name":"(anonymous_13)","decl":{"start":{"line":106,"column":4},"end":{"line":106,"column":5}},"loc":{"start":{"line":106,"column":23},"end":{"line":118,"column":5}},"line":106},"14":{"name":"(anonymous_14)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":29},"end":{"line":125,"column":5}},"line":119},"15":{"name":"(anonymous_15)","decl":{"start":{"line":126,"column":4},"end":{"line":126,"column":5}},"loc":{"start":{"line":126,"column":41},"end":{"line":134,"column":5}},"line":126}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":26,"column":9}},{"start":{"line":14,"column":8},"end":{"line":26,"column":9}}],"line":14},"1":{"loc":{"start":{"line":30,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":34,"column":9}},{"start":{"line":30,"column":8},"end":{"line":34,"column":9}}],"line":30},"2":{"loc":{"start":{"line":38,"column":8},"end":{"line":46,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":46,"column":9}},{"start":{"line":38,"column":8},"end":{"line":46,"column":9}}],"line":38},"3":{"loc":{"start":{"line":50,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":62,"column":9}},{"start":{"line":50,"column":8},"end":{"line":62,"column":9}}],"line":50},"4":{"loc":{"start":{"line":54,"column":12},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":54,"column":12},"end":{"line":61,"column":13}},{"start":{"line":54,"column":12},"end":{"line":61,"column":13}}],"line":54},"5":{"loc":{"start":{"line":76,"column":17},"end":{"line":76,"column":47}},"type":"binary-expr","locations":[{"start":{"line":76,"column":17},"end":{"line":76,"column":41}},{"start":{"line":76,"column":45},"end":{"line":76,"column":47}}],"line":76},"6":{"loc":{"start":{"line":77,"column":18},"end":{"line":77,"column":37}},"type":"binary-expr","locations":[{"start":{"line":77,"column":18},"end":{"line":77,"column":32}},{"start":{"line":77,"column":36},"end":{"line":77,"column":37}}],"line":77},"7":{"loc":{"start":{"line":83,"column":12},"end":{"line":90,"column":13}},"type":"if","locations":[{"start":{"line":83,"column":12},"end":{"line":90,"column":13}},{"start":{"line":83,"column":12},"end":{"line":90,"column":13}}],"line":83},"8":{"loc":{"start":{"line":83,"column":16},"end":{"line":83,"column":35}},"type":"binary-expr","locations":[{"start":{"line":83,"column":16},"end":{"line":83,"column":21}},{"start":{"line":83,"column":25},"end":{"line":83,"column":35}}],"line":83},"9":{"loc":{"start":{"line":100,"column":39},"end":{"line":100,"column":68}},"type":"binary-expr","locations":[{"start":{"line":100,"column":39},"end":{"line":100,"column":63}},{"start":{"line":100,"column":67},"end":{"line":100,"column":68}}],"line":100},"10":{"loc":{"start":{"line":100,"column":70},"end":{"line":100,"column":100}},"type":"binary-expr","locations":[{"start":{"line":100,"column":70},"end":{"line":100,"column":95}},{"start":{"line":100,"column":99},"end":{"line":100,"column":100}}],"line":100},"11":{"loc":{"start":{"line":112,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":117,"column":9}},{"start":{"line":112,"column":8},"end":{"line":117,"column":9}}],"line":112},"12":{"loc":{"start":{"line":121,"column":12},"end":{"line":123,"column":13}},"type":"if","locations":[{"start":{"line":121,"column":12},"end":{"line":123,"column":13}},{"start":{"line":121,"column":12},"end":{"line":123,"column":13}}],"line":121},"13":{"loc":{"start":{"line":128,"column":22},"end":{"line":128,"column":81}},"type":"cond-expr","locations":[{"start":{"line":128,"column":59},"end":{"line":128,"column":60}},{"start":{"line":128,"column":63},"end":{"line":128,"column":81}}],"line":128},"14":{"loc":{"start":{"line":129,"column":23},"end":{"line":129,"column":84}},"type":"cond-expr","locations":[{"start":{"line":129,"column":61},"end":{"line":129,"column":62}},{"start":{"line":129,"column":65},"end":{"line":129,"column":84}}],"line":129},"15":{"loc":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},{"start":{"line":130,"column":8},"end":{"line":132,"column":9}}],"line":130}},"s":{"0":1,"1":1,"2":1,"3":1,"4":6,"5":13,"6":13,"7":13,"8":51,"9":51,"10":51,"11":51,"12":51,"13":28,"14":28,"15":28,"16":28,"17":28,"18":1,"19":1,"20":1,"21":1,"22":0,"23":1,"24":1,"25":1,"26":1,"27":6,"28":6,"29":6,"30":6,"31":6,"32":1,"33":1,"34":3,"35":3,"36":3,"37":3,"38":0,"39":3,"40":3,"41":1,"42":4,"43":1,"44":1,"45":22,"46":22,"47":3,"48":94,"49":94,"50":94,"51":81,"52":13,"53":3,"54":14,"55":14,"56":22,"57":22,"58":22,"59":22,"60":18,"61":22,"62":1},"f":{"0":6,"1":13,"2":51,"3":28,"4":1,"5":0,"6":6,"7":1,"8":3,"9":0,"10":4,"11":22,"12":3,"13":94,"14":3,"15":22},"b":{"0":[13,0],"1":[51,0],"2":[28,0],"3":[1,0],"4":[1,0],"5":[6,0],"6":[6,0],"7":[3,0],"8":[3,3],"9":[22,0],"10":[22,0],"11":[81,13],"12":[14,0],"13":[0,22],"14":[0,22],"15":[18,4]},"inputSourceMap":{"version":3,"file":"C:\\Users\\bicar\\Documents\\code\\github\\SpaceSim\\projects\\shared\\src\\utilities\\game-score-tracker.ts","sources":["C:\\Users\\bicar\\Documents\\code\\github\\SpaceSim\\projects\\shared\\src\\utilities\\game-score-tracker.ts"],"names":[],"mappings":"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","sourcesContent":["import { DataTable } from \"./data-table\";\nimport { Logging } from \"./logging\";\n\nexport module GameScoreTracker {\n    export type Destroyed = {\n        targetId: string;\n        time: number;\n    };\n\n    export type Hit = {\n        targetId: string;\n        damage: number;\n        time: number;\n    };\n\n    export type GameStats = {\n        shipId: string;\n        name: string;\n        startedAt: number;\n        lastUpdatedAt: number;\n        opponentsDestroyed: Array<Destroyed>;\n        shotsFired: Array<number>;\n        shotsLanded: Array<Hit>;\n        accuracy: number;\n    };\n\n    export type UserScore = {\n        name: string;\n        score: number;\n    };\n\n    export type TrackedItem = {\n        id: string,\n        name: string\n    };\n};\n\nexport class GameScoreTracker extends DataTable<GameScoreTracker.GameStats> {\n    constructor() {\n        super({\n            indexKeys: ['shipId']\n        });\n    }\n\n    start(opts: GameScoreTracker.TrackedItem): void {\n        if (opts) {\n            const now = Date.now();\n            this.add({\n                shipId: opts.id,\n                name: opts.name,\n                startedAt: now,\n                lastUpdatedAt: now,\n                opponentsDestroyed: new Array<GameScoreTracker.Destroyed>(),\n                shotsFired: new Array<number>(),\n                shotsLanded: new Array<GameScoreTracker.Hit>(),\n                accuracy: 0\n            });\n        }\n    }\n\n    shotFired(shipId: string): void {\n        const stats = this.get({shipId});\n        if (stats) {\n            stats.shotsFired.push(Date.now());\n            Logging.log('trace', {shipId}, 'fired a shot');\n            this.updateStats({shipId, shotsFired: stats.shotsFired});\n        }\n    }\n\n    shotLanded(shotFiredBy: string, targetId: string, damage: number): void {\n        const stats = this.get({shipId: shotFiredBy});\n        if (stats) {\n            stats.shotsLanded.push({\n                targetId: targetId,\n                damage: damage,\n                time: Date.now()\n            });\n            Logging.log('debug', {shotFiredBy}, 'hit', {targetId}, 'for', {damage});\n            this.updateStats({shipId: shotFiredBy, shotsLanded: stats.shotsLanded});\n        }\n    }\n\n    opponentDestroyed(destroyerShipId: string, destroyedShipId: string): void {\n        const stats = this.get({shipId: destroyerShipId});\n        if (stats) {\n            const destroyed: Array<GameScoreTracker.Destroyed> = stats.opponentsDestroyed;\n            const index = destroyed.findIndex(d => d.targetId === destroyedShipId);\n            // if target not already listed then add it to list of destroyed\n            if (index < 0) {\n                Logging.log('info', {destroyerShipId}, 'destroyed', {destroyedShipId});\n                destroyed.push({\n                    targetId: destroyedShipId,\n                    time: Date.now()\n                });\n                this.updateStats({shipId: destroyerShipId, opponentsDestroyed: destroyed});\n            }\n        }\n    }\n\n    /**\n     * calculates the overall score based on:\n     * - opponents destroyed * 100\n     * - accuracy * 10\n     * so, if 3 oppnents had been destroyed and the accuracy is 25 the resulting\n     * score would be 300 + 250 = 550\n     * @param shipId the identifier used to lookup the stats and calculate the score\n     * @returns a numerical value representing the score\n     */\n    getScore(shipId: string): number {\n        let score: number = 0;\n        \n        const stats = this.getStats({shipId});\n        score = (stats.opponentsDestroyed || []).length * 100;\n        score += (stats.accuracy ?? 0) * 10;\n\n        return Number.parseInt(score.toFixed(0));\n    }\n    \n    getLeaderboard(): Array<GameScoreTracker.UserScore> {\n        const highScores = new Array<GameScoreTracker.UserScore>();\n        for (const stats of this.select()) {\n            if (stats && stats.name) {\n                // get all scores for same named user and filter out highest\n                const userStats = this.select({name: stats.name});\n                const lowToHighScores = userStats.map(s => this.getScore(s.shipId))\n                    .sort((a, b) => a - b);\n                const highestScore = lowToHighScores.pop();\n                highScores.push({name: stats.name, score: highestScore});\n            }\n        }\n        const lowToHigh = highScores.sort((a, b) => a.score - b.score);\n        const highToLow = lowToHigh.reverse();\n        return highToLow;\n    }\n\n    getStats(query: Partial<GameScoreTracker.GameStats>): GameScoreTracker.GameStats {\n        const stats = this.selectFirst(query);\n        return {\n            ...stats,\n            accuracy: this.getAccuracy(stats.shotsFired?.length ?? 0, stats.shotsLanded?.length ?? 0)\n        };\n    }\n\n    getAllStats(): Array<GameScoreTracker.GameStats> {\n        return this.select();\n    }\n\n    updateStats(stats: Partial<GameScoreTracker.GameStats>): void {\n        const prev = this.get(stats);\n        const updated = {\n            ...stats,\n            lastUpdatedAt: Date.now()\n        } as GameScoreTracker.GameStats;\n        if (prev) {\n            this.update(updated);\n        } else {\n            this.add(updated);\n        }\n    }\n\n    updateAllStats(...stats: Array<Partial<GameScoreTracker.GameStats>>): void {\n        for (const stat of stats) {\n            if (stat) {\n                this.updateStats(stat);\n            }\n        }\n    }\n\n    getAccuracy(shotsFired: number, shotsLanded: number): number {\n        let accuracy = 0;\n        const fired = (Number.isNaN(Number(shotsFired))) ? 0 : Number(shotsFired);\n        const landed = (Number.isNaN(Number(shotsLanded))) ? 0 : Number(shotsLanded);\n        if (fired > 0) {\n            accuracy = (landed / fired) * 100;\n        }\n        return accuracy;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"077a372d0361da740810a7d794de687b01e33178","contentHash":"f2861e511ae3787b7cd37d3799b2a85f3ded577abe9970646e25b854847b78a9"},"C:\\Users\\bicar\\Documents\\code\\github\\SpaceSim\\projects\\shared\\src\\utilities\\logging.ts":{"path":"C:\\Users\\bicar\\Documents\\code\\github\\SpaceSim\\projects\\shared\\src\\utilities\\logging.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":5,"column":0},"end":{"line":97,"column":56}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":30}},"4":{"start":{"line":21,"column":8},"end":{"line":44,"column":9}},"5":{"start":{"line":23,"column":12},"end":{"line":42,"column":13}},"6":{"start":{"line":25,"column":20},"end":{"line":25,"column":41}},"7":{"start":{"line":26,"column":20},"end":{"line":26,"column":26}},"8":{"start":{"line":28,"column":20},"end":{"line":28,"column":40}},"9":{"start":{"line":29,"column":20},"end":{"line":29,"column":26}},"10":{"start":{"line":31,"column":20},"end":{"line":31,"column":40}},"11":{"start":{"line":32,"column":20},"end":{"line":32,"column":26}},"12":{"start":{"line":34,"column":20},"end":{"line":34,"column":41}},"13":{"start":{"line":35,"column":20},"end":{"line":35,"column":26}},"14":{"start":{"line":37,"column":20},"end":{"line":37,"column":41}},"15":{"start":{"line":38,"column":20},"end":{"line":38,"column":26}},"16":{"start":{"line":41,"column":20},"end":{"line":41,"column":27}},"17":{"start":{"line":43,"column":12},"end":{"line":43,"column":66}},"18":{"start":{"line":46,"column":4},"end":{"line":46,"column":22}},"19":{"start":{"line":53,"column":21},"end":{"line":53,"column":49}},"20":{"start":{"line":54,"column":8},"end":{"line":54,"column":34}},"21":{"start":{"line":56,"column":4},"end":{"line":56,"column":22}},"22":{"start":{"line":64,"column":8},"end":{"line":93,"column":9}},"23":{"start":{"line":66,"column":16},"end":{"line":68,"column":17}},"24":{"start":{"line":67,"column":20},"end":{"line":67,"column":32}},"25":{"start":{"line":69,"column":16},"end":{"line":69,"column":22}},"26":{"start":{"line":71,"column":16},"end":{"line":73,"column":17}},"27":{"start":{"line":72,"column":20},"end":{"line":72,"column":32}},"28":{"start":{"line":74,"column":16},"end":{"line":74,"column":22}},"29":{"start":{"line":76,"column":16},"end":{"line":78,"column":17}},"30":{"start":{"line":77,"column":20},"end":{"line":77,"column":32}},"31":{"start":{"line":79,"column":16},"end":{"line":79,"column":22}},"32":{"start":{"line":81,"column":16},"end":{"line":83,"column":17}},"33":{"start":{"line":82,"column":20},"end":{"line":82,"column":32}},"34":{"start":{"line":84,"column":16},"end":{"line":84,"column":22}},"35":{"start":{"line":86,"column":16},"end":{"line":88,"column":17}},"36":{"start":{"line":87,"column":20},"end":{"line":87,"column":32}},"37":{"start":{"line":89,"column":16},"end":{"line":89,"column":22}},"38":{"start":{"line":92,"column":16},"end":{"line":92,"column":22}},"39":{"start":{"line":94,"column":8},"end":{"line":94,"column":21}},"40":{"start":{"line":96,"column":4},"end":{"line":96,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":20},"end":{"line":97,"column":1}},"line":5},"1":{"name":"log","decl":{"start":{"line":20,"column":13},"end":{"line":20,"column":16}},"loc":{"start":{"line":20,"column":33},"end":{"line":45,"column":5}},"line":20},"2":{"name":"dts","decl":{"start":{"line":52,"column":13},"end":{"line":52,"column":16}},"loc":{"start":{"line":52,"column":23},"end":{"line":55,"column":5}},"line":52},"3":{"name":"shouldLog","decl":{"start":{"line":63,"column":13},"end":{"line":63,"column":22}},"loc":{"start":{"line":63,"column":30},"end":{"line":95,"column":5}},"line":63}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":44,"column":9}},{"start":{"line":21,"column":8},"end":{"line":44,"column":9}}],"line":21},"1":{"loc":{"start":{"line":23,"column":12},"end":{"line":42,"column":13}},"type":"switch","locations":[{"start":{"line":24,"column":16},"end":{"line":26,"column":26}},{"start":{"line":27,"column":16},"end":{"line":29,"column":26}},{"start":{"line":30,"column":16},"end":{"line":32,"column":26}},{"start":{"line":33,"column":16},"end":{"line":35,"column":26}},{"start":{"line":36,"column":16},"end":{"line":38,"column":26}},{"start":{"line":39,"column":16},"end":{"line":39,"column":28}},{"start":{"line":40,"column":16},"end":{"line":41,"column":27}}],"line":23},"2":{"loc":{"start":{"line":53,"column":30},"end":{"line":53,"column":48}},"type":"binary-expr","locations":[{"start":{"line":53,"column":30},"end":{"line":53,"column":34}},{"start":{"line":53,"column":38},"end":{"line":53,"column":48}}],"line":53},"3":{"loc":{"start":{"line":64,"column":8},"end":{"line":93,"column":9}},"type":"switch","locations":[{"start":{"line":65,"column":12},"end":{"line":69,"column":22}},{"start":{"line":70,"column":12},"end":{"line":74,"column":22}},{"start":{"line":75,"column":12},"end":{"line":79,"column":22}},{"start":{"line":80,"column":12},"end":{"line":84,"column":22}},{"start":{"line":85,"column":12},"end":{"line":89,"column":22}},{"start":{"line":90,"column":12},"end":{"line":90,"column":24}},{"start":{"line":91,"column":12},"end":{"line":92,"column":22}}],"line":64},"4":{"loc":{"start":{"line":66,"column":16},"end":{"line":68,"column":17}},"type":"if","locations":[{"start":{"line":66,"column":16},"end":{"line":68,"column":17}},{"start":{"line":66,"column":16},"end":{"line":68,"column":17}}],"line":66},"5":{"loc":{"start":{"line":71,"column":16},"end":{"line":73,"column":17}},"type":"if","locations":[{"start":{"line":71,"column":16},"end":{"line":73,"column":17}},{"start":{"line":71,"column":16},"end":{"line":73,"column":17}}],"line":71},"6":{"loc":{"start":{"line":76,"column":16},"end":{"line":78,"column":17}},"type":"if","locations":[{"start":{"line":76,"column":16},"end":{"line":78,"column":17}},{"start":{"line":76,"column":16},"end":{"line":78,"column":17}}],"line":76},"7":{"loc":{"start":{"line":81,"column":16},"end":{"line":83,"column":17}},"type":"if","locations":[{"start":{"line":81,"column":16},"end":{"line":83,"column":17}},{"start":{"line":81,"column":16},"end":{"line":83,"column":17}}],"line":81},"8":{"loc":{"start":{"line":86,"column":16},"end":{"line":88,"column":17}},"type":"if","locations":[{"start":{"line":86,"column":16},"end":{"line":88,"column":17}},{"start":{"line":86,"column":16},"end":{"line":88,"column":17}}],"line":86},"9":{"loc":{"start":{"line":97,"column":13},"end":{"line":97,"column":54}},"type":"binary-expr","locations":[{"start":{"line":97,"column":13},"end":{"line":97,"column":28}},{"start":{"line":97,"column":33},"end":{"line":97,"column":53}}],"line":97}},"s":{"0":1,"1":1,"2":1,"3":1,"4":83,"5":2,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":2,"18":1,"19":2,"20":2,"21":1,"22":95,"23":1,"24":0,"25":1,"26":86,"27":2,"28":84,"29":1,"30":1,"31":0,"32":6,"33":4,"34":2,"35":1,"36":1,"37":0,"38":0,"39":87,"40":1},"f":{"0":1,"1":83,"2":2,"3":95},"b":{"0":[2,81],"1":[1,0,0,0,1,0,0],"2":[2,2],"3":[1,86,1,6,1,0,0],"4":[0,1],"5":[2,84],"6":[1,0],"7":[4,2],"8":[1,0],"9":[1,1]},"inputSourceMap":{"version":3,"file":"C:\\Users\\bicar\\Documents\\code\\github\\SpaceSim\\projects\\shared\\src\\utilities\\logging.ts","sources":["C:\\Users\\bicar\\Documents\\code\\github\\SpaceSim\\projects\\shared\\src\\utilities\\logging.ts"],"names":[],"mappings":";;;AAAA,IAAc,OAAO,CA8FpB;AA9FD,WAAc,OAAO;IAGjB;;OAEG;IACQ,gBAAQ,GAAa,MAAM,CAAC;IAEvC;;;;;;;;;OASG;IACH,SAAgB,GAAG,CAAC,KAAe,EAAE,GAAG,IAAgB;QACpD,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;YAClB,IAAI,IAAmC,CAAC;YACxC,QAAQ,KAAK,EAAE;gBACX,KAAK,OAAO;oBACR,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC;oBACrB,MAAM;gBACV,KAAK,MAAM;oBACP,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;oBACpB,MAAM;gBACV,KAAK,MAAM;oBACP,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;oBACpB,MAAM;gBACV,KAAK,OAAO;oBACR,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC;oBACrB,MAAM;gBACV,KAAK,OAAO;oBACR,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC;oBACrB,MAAM;gBACV,KAAK,MAAM,CAAC;gBACZ;oBACI,OAAO;aACd;YACD,IAAI,CAAC,GAAG,GAAG,EAAE,OAAO,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;SACzD;IACL,CAAC;IAzBe,WAAG,MAyBlB,CAAA;IAED;;;;OAIG;IACH,SAAgB,GAAG,CAAC,IAAa;QAC7B,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IAHe,WAAG,MAGlB,CAAA;IAED;;;;;OAKG;IACH,SAAgB,SAAS,CAAC,KAAe;QACrC,QAAQ,OAAO,CAAC,QAAQ,EAAE;YACtB,KAAK,OAAO;gBACR,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAC3B,OAAO,IAAI,CAAC;iBACf;gBACD,MAAM;YACV,KAAK,MAAM;gBACP,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACnC,OAAO,IAAI,CAAC;iBACf;gBACD,MAAM;YACV,KAAK,MAAM;gBACP,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAC3C,OAAO,IAAI,CAAC;iBACf;gBACD,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBACpD,OAAO,IAAI,CAAC;iBACf;gBACD,MAAM;YACV,KAAK,OAAO;gBACR,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;oBAC7D,OAAO,IAAI,CAAC;iBACf;gBACD,MAAM;YACV,KAAK,MAAM,CAAC;YACZ;gBACI,MAAM;SACb;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAhCe,iBAAS,YAgCxB,CAAA;AACL,CAAC,EA9Fa,OAAO,GAAP,eAAO,KAAP,eAAO,QA8FpB","sourcesContent":["export module Logging {\r\n    export type LogLevel = 'none' | 'error' | 'warn' | 'info' | 'debug' | 'trace';\r\n    \r\n    /**\r\n     * the minimum level of logs that should be output @default 'warn'\r\n     */\r\n    export var loglevel: LogLevel = 'warn';\r\n\r\n    /**\r\n     * logs a message to console if it is equal to or greater than the current\r\n     * `Logging.loglevel` setting using the following format:\r\n     * ```\r\n     * YYYY-MM-DDTHH:mm:SS.sssZ - [LEVEL]: data\r\n     * ```\r\n     * @param level the level this message is at (used to determine if it should\r\n     * be output to the console based on the value of `Logging.loglevel`)\r\n     * @param data the message to be output\r\n     */\r\n    export function log(level: LogLevel, ...data: Array<any>): void {\r\n        if (shouldLog(level)) {\r\n            let func: (...data: Array<any>) => void;\r\n            switch (level) {\r\n                case 'error':\r\n                    func = console.error;\r\n                    break;\r\n                case 'warn':\r\n                    func = console.warn;\r\n                    break;\r\n                case 'info':\r\n                    func = console.info;\r\n                    break;\r\n                case 'debug':\r\n                    func = console.debug;\r\n                    break;\r\n                case 'trace':\r\n                    func = console.trace;\r\n                    break;\r\n                case 'none':\r\n                default:\r\n                    return;\r\n            }\r\n            func(`${dts()} - [${level.toUpperCase()}]:`, ...data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * D.T.S (Date Time String) formats the passed in date (or Date.now()) as a string\r\n     * @param time the time in milliseconds since the epoch @default `Date.now()`\r\n     * @returns a formatted string in the form of `YYYY-MM-DDTHH:mm:SS.sssZ`\r\n     */\r\n    export function dts(time?: number): string {\r\n        const date = new Date(time ?? Date.now());\r\n        return date.toISOString();\r\n    }\r\n\r\n    /**\r\n     * determines if the passed in `LogLevel` should be output based on the current\r\n     * value of `Logging.loglevel`\r\n     * @param level the message log level to test against the `Logging.loglevel` value\r\n     * @returns `true` if the message should be output, otherwise `false`\r\n     */\r\n    export function shouldLog(level: LogLevel): boolean {\r\n        switch (Logging.loglevel) {\r\n            case 'error':\r\n                if (['error'].includes(level)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 'warn':\r\n                if (['error', 'warn'].includes(level)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 'info':\r\n                if (['error', 'warn', 'info'].includes(level)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 'debug':\r\n                if (['error', 'warn', 'info', 'debug'].includes(level)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 'trace':\r\n                if (['error', 'warn', 'info', 'debug', 'trace'].includes(level)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 'none':\r\n            default:\r\n                break;\r\n        }\r\n        return false;\r\n    }\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"333b2676536040bb731f02b51087b5bc73485ce3","contentHash":"54532cb36e6776bbaa49af6e154d3daaea20ccbe00d709d32fd60f1e6874cb75"}}